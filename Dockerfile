# ======================================================================
# Build FloppyUI
#
# The order of things within the build is important.
#
# Items that don't change much should be first so that we make use of
# the docker build cache.
#
# e.g. We run npm install early on so that we don't update every time
# a build runs, especially as this can be over 50Mb of downloads each time.
#
# The build is also broken down into three images:
# 1 builder based on the babel image contains the build tools and the dependencies
# 2 compiler handles the compilation of the application
# 3 the final image, contains httpd and the built application.
# ======================================================================

# The type of build, default is development which is faster & has all
# warnings generated by react.
#
# To build a production ready application use --build-arg environment=production
ARG environment=development

# ======================================================================
# Download NPM sources
#FROM area51/node:latest as npm
FROM node:latest as npm

# Used internally to point to local NPM repo. TODO make this configurable/optional
#RUN echo registry=https://nexus.europa.area51.dev/repository/npm-group/ >~/.npmrc

WORKDIR /opt/build
ADD ui/package.json package.json
#ADD package-lock.json package-lock.json
RUN npm install

# ======================================================================
# Run the build
FROM npm as build
ARG environment

WORKDIR /opt/build
ADD ui/.babelrc .babelrc
#ADD .eslintrc .eslintrc
ADD ui/webpack.config.js webpack.config.js

ADD ui/public public
ADD ui/css css
ADD ui/src src

RUN npm run build

# ======================================================================
# Apache HTTPD based image to run the app locally
FROM httpd:2.4.41-alpine as httpd

# Send all 404's to the index document.
# This is required so we can use URL based routing within the app.
RUN echo "ErrorDocument 404 /index.html" >>/usr/local/apache2/conf/httpd.conf

# Copy the distribution unto htdocs
COPY --from=build /opt/build/dist /usr/local/apache2/htdocs/
